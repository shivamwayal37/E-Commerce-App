name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ecommerce
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    # Set up Java
    - name: Set up JDK 22
      uses: actions/setup-java@v3
      with:
        java-version: '22'
        distribution: 'temurin'
        
    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    # Backend tests
    - name: Run backend tests
      working-directory: ./e-commerce-backend
      run: |
        ./gradlew :auth-service:test
        ./gradlew :product-service:test
        ./gradlew :order-service:test
    
    # Frontend tests
    - name: Run frontend tests
      working-directory: ./e-commerce-frontend
      run: |
        npm ci
        npm test -- --coverage --watchAll=false
    
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Build and push backend images
    - name: Build and push auth-service
      uses: docker/build-push-action@v3
      with:
        context: ./e-commerce-backend/auth-service
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-auth-service:latest
    
    # Deploy to production (example for Kubernetes)
    - name: Deploy to Kubernetes
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to production..."
        # Add your Kubernetes deployment commands here
        # kubectl apply -f k8s/
      
    # Deploy to staging
    - name: Deploy to Staging
      if: github.ref == 'refs/heads/develop'
      run: |
        echo "Deploying to staging..."
        # Add your staging deployment commands here
